<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>
	<bean id="line" class="kam.jar.radek.spring.demo.Line">
		<!-- <property name="type" value="Equilateral"></property> bezpośrednie 
			odwolanie do pola -->
		<!-- odwołanie do konstruktora. index wksazuje na kolejnosc parametrow -->
		<!-- w tym wypadku String jest pierwszy pod indeksem zero, int drugi pod 
			indeksem 1 -->
		<constructor-arg index="0" value="Equilateral"></constructor-arg>
		<constructor-arg index="1" value="20"></constructor-arg>
	</bean>

	<bean id="triangle" class="kam.jar.radek.spring.demo.Triangle">
		<!-- <property name="pointA" ref="pointA"></property> -->
		<!-- mozna uzyc notacji zagnieżdzonej, jak ponizej -->
		<!-- <property name="pointB"> -->
		<!-- <bean class="kam.jar.radek.spring.demo.Point"> -->
		<!-- <property name="x" value="-20"></property> -->
		<!-- <property name="y" value="0"></property> -->
		<!-- </bean> -->
		<!-- </property> -->
		<!-- <property name="pointB" ref="pointB"></property> -->
		<!-- <property name="pointC" ref="pointC"></property> -->
		<!-- mozna uzyc listy obiektow jak ponizej -->
		<property name="points">
			<list>
				<ref bean="pointA" />
				<ref bean="pointB" />
				<ref bean="pointC" />
			</list>
		</property>
	</bean>

	<bean id="secondTriangle" class="kam.jar.radek.spring.demo.SecondTriangleClass"
		autowire="byName"></bean>

	<bean id="pointA" class="kam.jar.radek.spring.demo.Point">
		<property name="x" value="${pointA.pointX}"></property>
		<property name="y" value="${pointA.pointY}"></property>
	</bean>

	<bean id="pointB" class="kam.jar.radek.spring.demo.Point">
		<property name="x" value="-20"></property>
		<property name="y" value="0"></property>
	</bean>

	<bean id="pointC" class="kam.jar.radek.spring.demo.Point">
		<property name="x" value="20"></property>
		<property name="y" value="0"></property>
	</bean>
	<!-- aby metody begore i after initialization dzialaly nalezy stworzyc bean 
		klasy w xmlowym pliku springa -->
	<!-- <bean class="kam.jar.radek.spring.demo.DesplayNameBeanPostProcessor"></bean> -->

	<!-- <bean class="kam.jar.radek.spring.demo.MyBeanFactory"></bean> -->


	<!-- najpierw deklarujemy uzycie placeholderow a w property podajemy nazwe: 
		locations i jej wartosc czyli nazwe pliku -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="pointsconfig.properties"></property>
	</bean>

	<bean id="circle" class="kam.jar.radek.spring.demo.Circle">
<!-- 		<property name="center" ref="pointA"></property> -->
	</bean>
	<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"></bean>

</beans>